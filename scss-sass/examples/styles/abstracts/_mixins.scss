// Contain floats / clearfix
@mixin cf {

	&::after {
		content: '';
		display: table;
		clear: both;
	}
}

@mixin hidden {
	display: none;
}

@mixin input-placeholder {
	&.placeholder { @content; }
	&:-moz-placeholder { @content; }
	&::-moz-placeholder { @content; }
	&:-ms-input-placeholder { @content; }
	&::-webkit-input-placeholder { @content; }
}

/*
	Form input placeholder text
	example:
	input,
	textarea {
		@include input-placeholder {
			color: $grey;
		}
	}
*/

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
	@include pseudo($pos: $position);
	width: 0;
	height: 0;

	@if $round {
		border-radius: 3px;
	}

	@if $direction == down {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-top: $size solid $color;
		margin-top: 0 - round( $size / 2.5 );
	} @else if $direction == up {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-bottom: $size solid $color;
		margin-bottom: 0 - round( $size / 2.5 );
	} @else if $direction == right {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-left: $size solid $color;
		margin-right: -$size;
	} @else if  $direction == left {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-right: $size solid $color;
		margin-left: -$size;
	}
}

/*
	CSS Triangle
	used for creating CSS only triangles
	example:
	.element {

		&::before {
			@include css-triangle(blue, down);
		}
	}
*/


@mixin fa-icon-sudo {
  font-family: "FontAwesome";
  position: absolute;
  top: 0;
  left: 0;
  font-size: 20px;
  font-weight: 700;
}

/*
.box:after {
    @include fa-icon-sudo;
    content: "\f007";
}
*/


@mixin antialias {
	font-smoothing: antialiased;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

@mixin appearance($val: none) {
	-webkit-appearance: $val;
	-moz-appearance: $val;
	appearance: $val;
}

@mixin hardware($backface: true, $perspective: 1000) {

	@if $backface {
		backface-visibility: hidden;
	}

	perspective: $perspective;
}

@mixin pseudo($display: block, $pos: absolute, $content: ''){
	content: $content;
	display: $display;
	position: $pos;
}

@mixin selection {
	::-moz-selection { @content; }
	::selection { @content; }
}



@mixin unselectable {
	-webkit-touch-callout: none;
	user-select: none;
}


@mixin rounded-corner($arc) {
    -moz-border-radius: $arc;
    -webkit-border-radius: $arc;
    border-radius: $arc;  
}

/*
.tab-button {
     @include rounded-corner(5px); 
}
*/


@mixin  btn-background($btn-background) {
    // for %btn , see _placeholder
    @extend %btn;
    background-color: $btn-background;
    &:hover {
        background-color: lighten($btn-background,10%);
    }
}

/*
.cta-btn {
    @include btn-background(#666);
}
*/

/*extending classes*/
@mixin animal {
    background: gray;
    border: 1px solid red;
    font-weight: bold;
    font-size: 50px;
    color: red;
    padding: 20px;
}
.cat {
    @include animal;
    color: white;
}
.dog {
    @include animal;
    color: black;
}



@mixin absCenter {
    position: absolute;
    top:50%; 
    left:50%;
    transform: translate(-50%,-50%);
}

/*
.class {
    @include absCenter;
}
*/












// ==== mixins are code blocks for reuse ====
// ==== not just the single variable but kind multile instructions ====
// ==== define mixins ====
@mixin mxn-warning {
    background-color: #da9412;
    color: #fff;
}

@mixin mxn-error {
    background-color: #aa0909;
    color: #fff;
}

// ==== nested mixin
@mixin mxn-error-block {
    @include mxn-error;
    font-weight: bold;
    position: relative;
}

// ==== root level mixin ==== styles for a 
@mixin fancy-links {
    a {
        font-style: italic;
        text-decoration: none
    }
}

@mixin absCenter {
    position: absolute;
    top:50%; 
    left:50%;
    transform: translate(-50%,-50%);
}

/*
.class {
    @include absCenter;
}
*/

// ==== Use mixins ====
// ==== root level include ====
@include fancy-links;
// ==== this wont put styles in .fancy-links a {}
// ==== this will put styles in a {}
.btn-warning {
    @include mxn-warning;
    font-size: 14px;
}

.btn-error {
    @include mxn-error;
    font-size: 14px;
}

.error-block {
    @include mxn-error-block;
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    border-radius: 4px;
    border: 1px solid #000;
}









// ==== mixins with arguments
// ==== single argument for border radius
@mixin rounded ($radius) {
    border-radius: $radius;
}

// ==== single argument with default value
//@mixin mxn-radius ($radius:10px) {border-radius: $radius;}
@mixin mxn-zindex ($depth:1) {
    z-index: $depth;
}

// ==== multiple arguments for border radius and border
@mixin border-and-radius ($radius, $border) {
    border-radius: $radius;
    border: $border;
}

// ==== single argument with multiple properties - varargs // cross browser multiple prperties
@mixin mxn-bx-shadow ($shadow...) {
    box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    -webkit-box-shadow: $shadow;
    -ms-box-shadow: $shadow;
}

// ==== single argument output
.box {
    @include rounded (12px);
}

// ==== multiple arguments output
.bordered-box {
    @include border-and-radius (4px, 1px solid #000);
}

// ==== single arguments, default value, and then changing that default value starts
.box1 {
    @include mxn-zindex; // .. other properties
}

.box2 {
    @include mxn-zindex(2); // .. other properties
}

.box3 {
    @include mxn-zindex(3); // .. other properties
}

// ==== single arguments, default value, and then changing that default value ends
// ==== multiple arguments - same mixin, different values, different output
.bordered-box-green {
    @include border-and-radius (10px, 1px solid #098509);
    background-color: #098509;
}

// === vararg usage
.shadowed-box {
    @include mxn-bx-shadow (1px 1px 10px #000);
}














// ==== Passing content into mixins ====
// ==== ie6 ====
@mixin for-ie-6 {
    // only apply to ie6 - * html is for ie6
    * html {
        @content;
    }
}

@include for-ie-6 {
    body {
        font-size: 120%;
    }
}

