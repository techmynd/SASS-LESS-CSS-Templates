// Contain floats / clearfix
@mixin cf {

	&::after {
		content: '';
		display: table;
		clear: both;
	}
}

@mixin hidden {
	display: none;
}

@mixin input-placeholder {
	&.placeholder { @content; }
	&:-moz-placeholder { @content; }
	&::-moz-placeholder { @content; }
	&:-ms-input-placeholder { @content; }
	&::-webkit-input-placeholder { @content; }
}

/*
	Form input placeholder text
	example:
	input,
	textarea {
		@include input-placeholder {
			color: $grey;
		}
	}
*/

@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
	@include pseudo($pos: $position);
	width: 0;
	height: 0;

	@if $round {
		border-radius: 3px;
	}

	@if $direction == down {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-top: $size solid $color;
		margin-top: 0 - round( $size / 2.5 );
	} @else if $direction == up {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-bottom: $size solid $color;
		margin-bottom: 0 - round( $size / 2.5 );
	} @else if $direction == right {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-left: $size solid $color;
		margin-right: -$size;
	} @else if  $direction == left {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-right: $size solid $color;
		margin-left: -$size;
	}
}

/*
	CSS Triangle
	used for creating CSS only triangles
	example:
	.element {

		&::before {
			@include css-triangle(blue, down);
		}
	}
*/


@mixin fa-icon-sudo {
  font-family: "FontAwesome";
  position: absolute;
  top: 0;
  left: 0;
  font-size: 20px;
  font-weight: 700;
}

/*
.box:after {
    @include fa-icon-sudo;
    content: "\f007";
}
*/


@mixin antialias {
	font-smoothing: antialiased;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

@mixin appearance($val: none) {
	-webkit-appearance: $val;
	-moz-appearance: $val;
	appearance: $val;
}

@mixin hardware($backface: true, $perspective: 1000) {

	@if $backface {
		backface-visibility: hidden;
	}

	perspective: $perspective;
}

@mixin pseudo($display: block, $pos: absolute, $content: ''){
	content: $content;
	display: $display;
	position: $pos;
}

@mixin selection {
	::-moz-selection { @content; }
	::selection { @content; }
}



@mixin unselectable {
	-webkit-touch-callout: none;
	user-select: none;
}


@mixin rounded-corner($arc) {
    -moz-border-radius: $arc;
    -webkit-border-radius: $arc;
    border-radius: $arc;  
}

/*
.tab-button {
     @include rounded-corner(5px); 
}
*/


@mixin  btn-background($btn-background) {
    // for %btn , see _placeholder
    @extend %btn;
    background-color: $btn-background;
    &:hover {
        background-color: lighten($btn-background,10%);
    }
}

/*
.cta-btn {
    @include btn-background(#666);
}
*/

/*extending classes*/
@mixin animal {
    background: gray;
    border: 1px solid red;
    font-weight: bold;
    font-size: 50px;
    color: red;
    padding: 20px;
}
.cat {
    @include animal;
    color: white;
}
.dog {
    @include animal;
    color: black;
}



@mixin absCenter {
    position: absolute;
    top:50%; 
    left:50%;
    transform: translate(-50%,-50%);
}

/*
.class {
    @include absCenter;
}
*/